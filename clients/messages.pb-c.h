/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_messages_2eproto__INCLUDED
#define PROTOBUF_C_messages_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Messages__CreateCircuit Messages__CreateCircuit;
typedef struct _Messages__CircuitCreated Messages__CircuitCreated;
typedef struct _Messages__CheckFailover Messages__CheckFailover;
typedef struct _Messages__CheckFailoverAcknowledge Messages__CheckFailoverAcknowledge;
typedef struct _Messages__FailoverComplete Messages__FailoverComplete;


/* --- enums --- */


/* --- messages --- */

struct  _Messages__CreateCircuit
{
  ProtobufCMessage base;
  uint64_t client_id;
  size_t n_next_hop_ip;
  char **next_hop_ip;
  protobuf_c_boolean has_next_hop_authenticator;
  uint64_t next_hop_authenticator;
};
#define MESSAGES__CREATE_CIRCUIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__create_circuit__descriptor) \
    , 0, 0,NULL, 0,0 }


struct  _Messages__CircuitCreated
{
  ProtobufCMessage base;
  Messages__CreateCircuit *request;
  int64_t authenticator;
  size_t n_ip;
  char **ip;
};
#define MESSAGES__CIRCUIT_CREATED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__circuit_created__descriptor) \
    , NULL, 0, 0,NULL }


struct  _Messages__CheckFailover
{
  ProtobufCMessage base;
  uint64_t authenticator;
  protobuf_c_boolean should_forward;
};
#define MESSAGES__CHECK_FAILOVER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__check_failover__descriptor) \
    , 0, 0 }


struct  _Messages__CheckFailoverAcknowledge
{
  ProtobufCMessage base;
  Messages__CheckFailover *request;
};
#define MESSAGES__CHECK_FAILOVER_ACKNOWLEDGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__check_failover_acknowledge__descriptor) \
    , NULL }


struct  _Messages__FailoverComplete
{
  ProtobufCMessage base;
  Messages__CheckFailover *request;
  protobuf_c_boolean success;
};
#define MESSAGES__FAILOVER_COMPLETE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&messages__failover_complete__descriptor) \
    , NULL, 0 }


/* Messages__CreateCircuit methods */
void   messages__create_circuit__init
                     (Messages__CreateCircuit         *message);
size_t messages__create_circuit__get_packed_size
                     (const Messages__CreateCircuit   *message);
size_t messages__create_circuit__pack
                     (const Messages__CreateCircuit   *message,
                      uint8_t             *out);
size_t messages__create_circuit__pack_to_buffer
                     (const Messages__CreateCircuit   *message,
                      ProtobufCBuffer     *buffer);
Messages__CreateCircuit *
       messages__create_circuit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__create_circuit__free_unpacked
                     (Messages__CreateCircuit *message,
                      ProtobufCAllocator *allocator);
/* Messages__CircuitCreated methods */
void   messages__circuit_created__init
                     (Messages__CircuitCreated         *message);
size_t messages__circuit_created__get_packed_size
                     (const Messages__CircuitCreated   *message);
size_t messages__circuit_created__pack
                     (const Messages__CircuitCreated   *message,
                      uint8_t             *out);
size_t messages__circuit_created__pack_to_buffer
                     (const Messages__CircuitCreated   *message,
                      ProtobufCBuffer     *buffer);
Messages__CircuitCreated *
       messages__circuit_created__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__circuit_created__free_unpacked
                     (Messages__CircuitCreated *message,
                      ProtobufCAllocator *allocator);
/* Messages__CheckFailover methods */
void   messages__check_failover__init
                     (Messages__CheckFailover         *message);
size_t messages__check_failover__get_packed_size
                     (const Messages__CheckFailover   *message);
size_t messages__check_failover__pack
                     (const Messages__CheckFailover   *message,
                      uint8_t             *out);
size_t messages__check_failover__pack_to_buffer
                     (const Messages__CheckFailover   *message,
                      ProtobufCBuffer     *buffer);
Messages__CheckFailover *
       messages__check_failover__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__check_failover__free_unpacked
                     (Messages__CheckFailover *message,
                      ProtobufCAllocator *allocator);
/* Messages__CheckFailoverAcknowledge methods */
void   messages__check_failover_acknowledge__init
                     (Messages__CheckFailoverAcknowledge         *message);
size_t messages__check_failover_acknowledge__get_packed_size
                     (const Messages__CheckFailoverAcknowledge   *message);
size_t messages__check_failover_acknowledge__pack
                     (const Messages__CheckFailoverAcknowledge   *message,
                      uint8_t             *out);
size_t messages__check_failover_acknowledge__pack_to_buffer
                     (const Messages__CheckFailoverAcknowledge   *message,
                      ProtobufCBuffer     *buffer);
Messages__CheckFailoverAcknowledge *
       messages__check_failover_acknowledge__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__check_failover_acknowledge__free_unpacked
                     (Messages__CheckFailoverAcknowledge *message,
                      ProtobufCAllocator *allocator);
/* Messages__FailoverComplete methods */
void   messages__failover_complete__init
                     (Messages__FailoverComplete         *message);
size_t messages__failover_complete__get_packed_size
                     (const Messages__FailoverComplete   *message);
size_t messages__failover_complete__pack
                     (const Messages__FailoverComplete   *message,
                      uint8_t             *out);
size_t messages__failover_complete__pack_to_buffer
                     (const Messages__FailoverComplete   *message,
                      ProtobufCBuffer     *buffer);
Messages__FailoverComplete *
       messages__failover_complete__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   messages__failover_complete__free_unpacked
                     (Messages__FailoverComplete *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Messages__CreateCircuit_Closure)
                 (const Messages__CreateCircuit *message,
                  void *closure_data);
typedef void (*Messages__CircuitCreated_Closure)
                 (const Messages__CircuitCreated *message,
                  void *closure_data);
typedef void (*Messages__CheckFailover_Closure)
                 (const Messages__CheckFailover *message,
                  void *closure_data);
typedef void (*Messages__CheckFailoverAcknowledge_Closure)
                 (const Messages__CheckFailoverAcknowledge *message,
                  void *closure_data);
typedef void (*Messages__FailoverComplete_Closure)
                 (const Messages__FailoverComplete *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor messages__create_circuit__descriptor;
extern const ProtobufCMessageDescriptor messages__circuit_created__descriptor;
extern const ProtobufCMessageDescriptor messages__check_failover__descriptor;
extern const ProtobufCMessageDescriptor messages__check_failover_acknowledge__descriptor;
extern const ProtobufCMessageDescriptor messages__failover_complete__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_messages_2eproto__INCLUDED */
